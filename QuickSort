public class QuickSorting {
	
	public static void quickSort(int [] input) {
		quickSort(input,0,input.length-1);
	}
	
	public static void quickSort(int [] input, int si, int ei) {
		
		if(si>=ei) {
			return;
		}
		
		int pivotPos = partition(input,si,ei);
		quickSort(input,si,pivotPos-1);
		quickSort(input,pivotPos+1,ei);
		
	}

	private static int partition(int[] input, int si, int ei) {

		int count = 0;
		int pivot = input[si];
		
		for(int i=si+1;i<=ei;i++) {
			if(input[i]<=pivot) {
				count++;
			}
		}
		
		int pivotPos = si+count;
		
		int temp = input[si];
		input[si] = input[pivotPos];
		input[pivotPos]=temp;
		
		int i=si;
		int j=ei;
		
		while(i<pivotPos && j>pivotPos) {
			
			if(input[i]<=input[pivotPos]) {
				i++;
			}
			else if(input[j]>input[pivotPos]){
				j--;
			}
			else {
			temp = input[i];
			input[i]=input[j];
			input[j]=temp;
			i++;j--;
		}
		
		
	}
		
		return pivotPos;
	}
}
